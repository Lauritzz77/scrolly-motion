---
import { Code } from "astro:components";
import type {
  BundledLanguage,
  BuiltinLanguage,
  LanguageRegistration,
  SpecialLanguage,
} from "shiki";

interface Props {
  language?: BuiltinLanguage | SpecialLanguage | LanguageRegistration;
  code: string;
  title?: string;
  copyable?: boolean;
}

const { language = "html", code, title, copyable = true } = Astro.props;
---

<div class="code-block">
  {
    title && (
      <div class="code-header">
        <span class="code-title">{title}</span>
      </div>
    )
  }
  <div class="code-container">
    <Code
      code={code}
      lang={language as BundledLanguage}
      theme="github-dark"
      class:list={["rounded-lg border-1 b-solid border-gray-700 p-3"]}
    />
    {
      copyable && (
        <button
          class="copy-button"
          data-code={code}
          aria-label="Copy code"
          title="Copy code"
        >
          <svg
            class="copy-icon"
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <rect x="9" y="9" width="13" height="13" rx="2" ry="2" />
            <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1" />
          </svg>
          <svg
            class="check-icon"
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            style="display: none;"
          >
            <polyline points="20 6 9 17 4 12" />
          </svg>
        </button>
      )
    }
  </div>
</div>

<style>
  .code-container {
    position: relative;
  }

  .copy-button {
    position: absolute;
    bottom: 0.5rem;
    right: 0.5rem;
    background: rgba(255, 255, 255, 0.9);
    border: 1px solid #e2e8f0;
    border-radius: 0.25rem;
    cursor: pointer;
    padding: 0.375rem;
    transition: all 0.2s;
    color: #64748b;
    backdrop-filter: blur(4px);
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  }

  .copy-button:hover {
    background: rgba(255, 255, 255, 1);
    color: #334155;
    border-color: #cbd5e1;
  }

  .copy-button:active {
    transform: scale(0.95);
  }

  .copy-button.copied {
    color: #059669;
    background: rgba(236, 253, 245, 0.9);
    border-color: #10b981;
  }

  .copy-icon,
  .check-icon {
    transition: all 0.2s;
    display: block;
  }

  /* Ensure Astro Code component styling works correctly */
  :global(.shiki) {
    margin: 0 !important;
    border-radius: 0 !important;
  }

  :global(.shiki code) {
    display: block;
    padding: 1rem;
    overflow-x: auto;
  }
</style>

<script>
  // Copy functionality
  function setupCopyButtons() {
    document.querySelectorAll(".copy-button").forEach((button) => {
      button.addEventListener("click", async () => {
        const code = button.getAttribute("data-code");
        if (code) {
          try {
            await navigator.clipboard.writeText(code);

            // Show checkmark
            const copyIcon = button.querySelector(".copy-icon") as HTMLElement;
            const checkIcon = button.querySelector(
              ".check-icon"
            ) as HTMLElement;

            if (copyIcon && checkIcon) {
              copyIcon.style.display = "none";
              checkIcon.style.display = "block";
              button.classList.add("copied");

              // Reset after 2 seconds
              setTimeout(() => {
                copyIcon.style.display = "block";
                checkIcon.style.display = "none";
                button.classList.remove("copied");
              }, 2000);
            }
          } catch (err) {
            console.error("Failed to copy code:", err);
          }
        }
      });
    });
  }

  // Initialize copy buttons
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", setupCopyButtons);
  } else {
    setupCopyButtons();
  }

  // Also run after Astro page transitions
  document.addEventListener("astro:page-load", setupCopyButtons);
</script>
